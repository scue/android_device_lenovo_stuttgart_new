on early-init
    start ueventd

on init
    export PATH /sbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /external_sd

    symlink /system/etc /etc

    mkdir /sdcard
    mkdir /system
    mkdir /data
    mkdir /cache
    mkdir /radio
    mount /tmp /tmp tmpfs

    chown root shell /tmp
    chmod 0775 /tmp

    #
    write /sys/devices/platform/s5p-dsim.0/backlight/pwm-backlight.0/brightness 110
    write /proc/sys/kernel/hung_task_timeout_secs 0
    write /sys/class/android_usb/android0/functions mass_storage,adb
    #
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 17ef
    write /sys/class/android_usb/android0/idProduct 7533
    write /sys/class/android_usb/android0/iManufacturer ${ro.product.manufacturer}
    write /sys/class/android_usb/android0/iProduct ${ro.product.model}
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}

on boot

    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

service ueventd /sbin/ueventd
    critical

service recovery /sbin/recovery

service adbd /sbin/adbd recovery
    disabled

# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    write /sys/class/android_usb/android0/enable 1
    start adbd

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1
